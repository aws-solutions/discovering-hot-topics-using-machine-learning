// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test by passing state machine 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81ArtifactHash85E152F4": Object {
      "Description": "Artifact hash for asset \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3Bucket0BD814D4": Object {
      "Description": "S3 bucket for asset \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD": Object {
      "Description": "S3 key for asset version \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "testFragmentTaskLambdaFunction8A1F50BD": Object {
      "DependsOn": Array [
        "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904",
        "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3Bucket0BD814D4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "testFragmentTaskLambdaFunctionServiceRole9E2C5534": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "states:SendTaskSuccess",
                "states:SendTaskFailure",
                "states:SendTaskHeartbeat",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "testStateMachineFA72FDE7",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904",
        "Roles": Array [
          Object {
            "Ref": "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testFragmentTaskLambdaFunctionSqsEventSourcetestStacktestFragmentTaskqueueC23BDA1DCDCA658C": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "testFragmentTaskqueue31475E94",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "testFragmentTaskLambdaFunction8A1F50BD",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "testFragmentTaskdeadLetterQueueEA9F84F8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testFragmentTaskdeadLetterQueuePolicy1213FF74": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskdeadLetterQueueEA9F84F8",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskdeadLetterQueueEA9F84F8",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "testFragmentTaskdeadLetterQueueEA9F84F8",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "testFragmentTaskqueue31475E94": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "testFragmentTaskdeadLetterQueueEA9F84F8",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testFragmentTaskqueuePolicy223A544A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "testFragmentTaskqueue31475E94",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "testStateMachineFA72FDE7": Object {
      "DependsOn": Array [
        "testStateMachineRole57248FD0",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"Pass\\",\\"States\\":{\\"Pass\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testStateMachineRole57248FD0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "testStateMachineRole57248FD0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`test statemachine fragment creation 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81ArtifactHash85E152F4": Object {
      "Description": "Artifact hash for asset \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3Bucket0BD814D4": Object {
      "Description": "S3 bucket for asset \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
    "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD": Object {
      "Description": "S3 key for asset version \\"b7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "testFragmentLambdaStateMachineTask8BA38528": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \\"*\\"",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testFragmentLambdaStateMachineTask8BA38528",
        "Roles": Array [
          Object {
            "Ref": "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testFragmentTaskLambdaFunction8A1F50BD": Object {
      "DependsOn": Array [
        "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904",
        "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3Bucket0BD814D4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb7ac01fc6d74488211f4bb966fcf8e157cfce551b0aa63b80ebd41ac8a71fe81S3VersionKey8AB1A8BD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "testFragmentTaskLambdaFunctionServiceRole9E2C5534": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testFragmentTaskLambdaFunctionServiceRoleDefaultPolicy6E2DD904",
        "Roles": Array [
          Object {
            "Ref": "testFragmentTaskLambdaFunctionServiceRole9E2C5534",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testFragmentTaskLambdaFunctionSqsEventSourcetestStacktestFragmentTaskqueueC23BDA1DCDCA658C": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "testFragmentTaskqueue31475E94",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "testFragmentTaskLambdaFunction8A1F50BD",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "testFragmentTaskdeadLetterQueueEA9F84F8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testFragmentTaskdeadLetterQueuePolicy1213FF74": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskdeadLetterQueueEA9F84F8",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskdeadLetterQueueEA9F84F8",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "testFragmentTaskdeadLetterQueueEA9F84F8",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "testFragmentTaskqueue31475E94": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "testFragmentTaskdeadLetterQueueEA9F84F8",
              "Arn",
            ],
          },
          "maxReceiveCount": 15,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testFragmentTaskqueuePolicy223A544A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testFragmentTaskqueue31475E94",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "testFragmentTaskqueue31475E94",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
  },
}
`;
