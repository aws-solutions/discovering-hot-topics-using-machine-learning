// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Bus creation 1`] = `
Object {
  "Conditions": Object {
    "IngestionDeployCustomIngestion93AB274A": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DeployCustomIngestion",
        },
        "Yes",
      ],
    },
    "IngestionDeployRSSFeeds0E648DA1": Object {
      "Fn::And": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DeployRSSFeeds",
            },
            "Yes",
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "RSSNewsFeedIngestFrequency",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployRedditIngestionB0819499": Object {
      "Fn::And": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DeployRedditIngestion",
            },
            "Yes",
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "RedditAPIKey",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "RedditIngestionFrequency",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "SubRedditsToFollow",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployTwitterIngestion4D7DE3EB": Object {
      "Fn::And": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DeployTwitter",
            },
            "Yes",
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "TwitterSearchQuery",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "TwitterIngestQueryFrequency",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "TwitterSSMPathForBearerToken",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployYouTubeCommentsA44A0A50": Object {
      "Fn::And": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DeployYouTubeCommentsIngestion",
            },
            "Yes",
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "YouTubeSearchIngestionFreq",
                },
                "",
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::And": Array [
                Object {
                  "Fn::Equals": Array [
                    Object {
                      "Ref": "YoutubeSearchQuery",
                    },
                    "",
                  ],
                },
                Object {
                  "Fn::Equals": Array [
                    "",
                  ],
                },
              ],
            },
          ],
        },
        Object {
          "Fn::Not": Array [
            Object {
              "Fn::Equals": Array [
                Object {
                  "Ref": "YoutubeAPIKey",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
  },
  "Outputs": Object {
    "IngestionS3BucketToUploadData5A8509A2": Object {
      "Condition": "IngestionDeployCustomIngestion93AB274A",
      "Description": "Bucket location to upload source files for ingestion",
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://s3.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Fn::GetAtt": Array [
                "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8",
                "Outputs.IngestionS3CustomIngestionS3Bucket83268CB3Ref",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fArtifactHash3F521863": Object {
      "Description": "Artifact hash for asset \\"082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958f\\"",
      "Type": "String",
    },
    "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fS3Bucket6CF1699E": Object {
      "Description": "S3 bucket for asset \\"082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958f\\"",
      "Type": "String",
    },
    "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fS3VersionKey4E46E454": Object {
      "Description": "S3 key for asset version \\"082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958f\\"",
      "Type": "String",
    },
    "AssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3ArtifactHashA2A4BAD3": Object {
      "Description": "Artifact hash for asset \\"12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3\\"",
      "Type": "String",
    },
    "AssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3Bucket9C4B93E6": Object {
      "Description": "S3 bucket for asset \\"12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3\\"",
      "Type": "String",
    },
    "AssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3VersionKeyAE1109A5": Object {
      "Description": "S3 key for asset version \\"12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3\\"",
      "Type": "String",
    },
    "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feArtifactHashCC219F93": Object {
      "Description": "Artifact hash for asset \\"24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204fe\\"",
      "Type": "String",
    },
    "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feS3Bucket2CB045E2": Object {
      "Description": "S3 bucket for asset \\"24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204fe\\"",
      "Type": "String",
    },
    "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feS3VersionKey99FBCD4E": Object {
      "Description": "S3 key for asset version \\"24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204fe\\"",
      "Type": "String",
    },
    "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507ArtifactHashF6D20CC8": Object {
      "Description": "Artifact hash for asset \\"574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507\\"",
      "Type": "String",
    },
    "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507S3Bucket2BBF90FB": Object {
      "Description": "S3 bucket for asset \\"574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507\\"",
      "Type": "String",
    },
    "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507S3VersionKeyE1813202": Object {
      "Description": "S3 key for asset version \\"574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507\\"",
      "Type": "String",
    },
    "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232ArtifactHash96BC20BE": Object {
      "Description": "Artifact hash for asset \\"623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232\\"",
      "Type": "String",
    },
    "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232S3Bucket0417DA8C": Object {
      "Description": "S3 bucket for asset \\"623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232\\"",
      "Type": "String",
    },
    "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232S3VersionKey5AA31B7B": Object {
      "Description": "S3 key for asset version \\"623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232\\"",
      "Type": "String",
    },
    "AssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622ArtifactHashB4CEF6C9": Object {
      "Description": "Artifact hash for asset \\"65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622\\"",
      "Type": "String",
    },
    "AssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3Bucket18A0F98C": Object {
      "Description": "S3 bucket for asset \\"65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622\\"",
      "Type": "String",
    },
    "AssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3VersionKeyDC007E39": Object {
      "Description": "S3 key for asset version \\"65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622\\"",
      "Type": "String",
    },
    "AssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2ArtifactHashA3EC81B3": Object {
      "Description": "Artifact hash for asset \\"83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2\\"",
      "Type": "String",
    },
    "AssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3BucketFA3528CF": Object {
      "Description": "S3 bucket for asset \\"83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2\\"",
      "Type": "String",
    },
    "AssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3VersionKey96E6DE1B": Object {
      "Description": "S3 key for asset version \\"83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2\\"",
      "Type": "String",
    },
    "AssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdArtifactHashFDCFD785": Object {
      "Description": "Artifact hash for asset \\"bac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bd\\"",
      "Type": "String",
    },
    "AssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3BucketEC06255A": Object {
      "Description": "S3 bucket for asset \\"bac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bd\\"",
      "Type": "String",
    },
    "AssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3VersionKey9B645B6A": Object {
      "Description": "S3 key for asset version \\"bac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bd\\"",
      "Type": "String",
    },
    "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fArtifactHash98C6C209": Object {
      "Description": "Artifact hash for asset \\"bf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279f\\"",
      "Type": "String",
    },
    "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fS3Bucket3459BAE7": Object {
      "Description": "S3 bucket for asset \\"bf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279f\\"",
      "Type": "String",
    },
    "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fS3VersionKey688FF437": Object {
      "Description": "S3 key for asset version \\"bf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279f\\"",
      "Type": "String",
    },
    "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eArtifactHash5AD4ED38": Object {
      "Description": "Artifact hash for asset \\"c4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481e\\"",
      "Type": "String",
    },
    "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eS3Bucket74A4FFE6": Object {
      "Description": "S3 bucket for asset \\"c4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481e\\"",
      "Type": "String",
    },
    "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eS3VersionKeyF03F0C67": Object {
      "Description": "S3 key for asset version \\"c4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481e\\"",
      "Type": "String",
    },
    "AssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eArtifactHash51B0C8EF": Object {
      "Description": "Artifact hash for asset \\"dfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325e\\"",
      "Type": "String",
    },
    "AssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3Bucket4A8BF259": Object {
      "Description": "S3 bucket for asset \\"dfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325e\\"",
      "Type": "String",
    },
    "AssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3VersionKeyF30FD9AB": Object {
      "Description": "S3 key for asset version \\"dfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325e\\"",
      "Type": "String",
    },
    "Config": Object {
      "Default": "{\\"country\\":\\"ALL\\", \\"language\\":\\"ALL\\", \\"topic\\":\\"ALL\\"}",
      "Description": "Provide configuration for RSS feeds. This parameter should be configured as a JSON string. Here is a sample configuration {\\"country\\":\\"ALL\\", \\"language\\":\\"ALL\\", \\"topic\\":\\"ALL\\"}. For Country and language use ISO code. The list of superset of all supported topics is: \\"tech\\", \\"news\\", \\"business\\", \\"science\\", \\"finance\\", \\"food\\", \\"politics\\", \\"economics\\", \\"travel\\", \\"entertainment\\", \\"music\\", \\"sport\\", \\"world\\".Note: not all topics are supported for each RSS provider. Setting the value as \\"ALL\\", is treated as a wild character search",
      "Type": "String",
    },
    "DeployCustomIngestion": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Required: Would you like to deploy custom data ingestion from an S3 bucket.",
      "Type": "String",
    },
    "DeployRSSFeeds": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy Twitter Ingestion mechanism",
      "Type": "String",
    },
    "DeployRedditIngestion": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Required: Would you like to deploy the news feed ingestion mechanism. If you answer yes, Config and RSSNewsFeedIngestFrequency parameters are mandatory",
      "Type": "String",
    },
    "DeployTwitter": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy Twitter Ingestion mechanism",
      "Type": "String",
    },
    "DeployYouTubeCommentsIngestion": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy YouTube comments ingestion mechanism. If you answer yes, YouTubeVideoSearchQuery and YouTubeSearchIngestionFreq parameters are mandatory",
      "Type": "String",
    },
    "NewsSearchQuery": Object {
      "ConstraintDescription": "Please enter the keyword to use to filter RSS news feed",
      "Description": "Provide comma separated list of keywords (optional) to filter news feeds. Only feeds containing atleast one of the keywords from the list will be processed. If no keyword is provided, feeds will not be filtered and all RSS feeds will be processed",
      "Type": "String",
    },
    "NumberOfTopics": Object {
      "ConstraintDescription": "Please verify if the value entered for number of topics to be discovered is between 1 and 100 (both inclusive).",
      "Default": "10",
      "Description": "The number of topics to be discovered by Topic analysis. The min value is 1 and maximum value is 100",
      "MaxValue": 100,
      "MinValue": 1,
      "Type": "Number",
    },
    "RSSNewsFeedIngestFrequency": Object {
      "AllowedPattern": "(cron\\\\(\\\\s*($|#|\\\\w+\\\\s*=|(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?(?:,(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?)*)\\\\s+(\\\\?|\\\\*|(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?)*)\\\\s+(\\\\?|\\\\*|(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\\\?|\\\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?)*|\\\\?|\\\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\\\s)+(\\\\?|\\\\*|(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?(?:,(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?)*))\\\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(0/5 * * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0 23 * * ? *)",
      "Description": "The frequency at which RSS Feeds should be pulled. For detailed documentation on schedule expression rules, please refer https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Type": "String",
    },
    "RedditAPIKey": Object {
      "AllowedPattern": "^$|^(?!\\\\s*$).+",
      "ConstraintDescription": "Please provide the SSM key for Reddit API",
      "Default": "/discovering-hot-topics-using-machine-learning/reddit/comments",
      "Description": "Required: The SSM parameter key name where the Reddit API credentials detailare stored. For details about how and where to store the API credentials, please refer the implementation guide for this solution",
      "Type": "String",
    },
    "RedditIngestionFrequency": Object {
      "AllowedPattern": "^$|(cron\\\\(\\\\s*($|#|\\\\w+\\\\s*=|(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?(?:,(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?)*)\\\\s+(\\\\?|\\\\*|(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?)*)\\\\s+(\\\\?|\\\\*|(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\\\?|\\\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?)*|\\\\?|\\\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\\\s)+(\\\\?|\\\\*|(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?(?:,(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?)*))\\\\))$",
      "Default": "cron(0/60 * * * ? *)",
      "Description": "Required: The Polling frequency at which the system should ingest comments from subreddits",
      "Type": "String",
    },
    "SubRedditsToFollow": Object {
      "AllowedPattern": "^$|[^,(?! )]+",
      "ConstraintDescription": "",
      "Default": "r/aws,r/MachineLearning",
      "Description": "Optional: Please provide the list of SubReddits to follow as comma separated list. Alternatively you can also set the list in the DynamoDB table. For details on the DynamoDB configuration, please refer our implementation guide",
      "Type": "String",
    },
    "SupportedLanguages": Object {
      "AllowedPattern": "^$|([a-z]{2}-[a-z]{2}|[a-z]{2})(,([a-z]{2}-[a-z]{2}|[a-z]{2}))*",
      "ConstraintDescription": "Provide a list of comma separated language iso-code values, Example: de,en,es,it,pt,fr,ja,ko,zh-cn (no spaces after the comma). The input did not match the validation pattern.",
      "Default": "en,es",
      "Description": "The list of languages to query the Search API with. The super set of languages supported is driven by Amazon Translate. For the latest list of languages, please refer to the Comprehend documentation at this location https://docs.aws.amazon.com/translate/latest/dg/what-is.html#language-pairs",
      "MaxLength": 43,
      "MinLength": 2,
      "Type": "String",
    },
    "TopicAnalysisFrequency": Object {
      "AllowedPattern": "(cron\\\\(\\\\s*($|#|\\\\w+\\\\s*=|(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?(?:,(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?)*)\\\\s+(\\\\?|\\\\*|(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?)*)\\\\s+(\\\\?|\\\\*|(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\\\?|\\\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?)*|\\\\?|\\\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\\\s)+(\\\\?|\\\\*|(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?(?:,(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?)*))\\\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(10 0 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(10 0 * * ? *)",
      "Description": "The frequency at which the topic analysis job should run. The minimum is an hour. It is recommened That the job be run a few mins after the hour e.g 10 mins after the hour",
      "Type": "String",
    },
    "TwitterIngestQueryFrequency": Object {
      "AllowedPattern": "(cron\\\\(\\\\s*($|#|\\\\w+\\\\s*=|(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?(?:,(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?)*)\\\\s+(\\\\?|\\\\*|(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?)*)\\\\s+(\\\\?|\\\\*|(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\\\?|\\\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?)*|\\\\?|\\\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\\\s)+(\\\\?|\\\\*|(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?(?:,(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?)*))\\\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(0/5 * * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0/5 * * * ? *)",
      "Description": "The frequency at which API calls will be made to twitter in a cron expression format. For detailed documentation on schedule expression rules, please refer https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Type": "String",
    },
    "TwitterSSMPathForBearerToken": Object {
      "AllowedPattern": "^(?!\\\\s*$).+",
      "ConstraintDescription": "The SSM parameter store path cannot be empty",
      "Default": "/discovering-hot-topics-using-machine-learning/discovering-hot-topics-using-machine-learning/twitter",
      "Description": "The SSM parameter store path of key where the credentials are stored as encrypted string",
      "Type": "String",
    },
    "TwitterSearchQuery": Object {
      "Default": "entertainment",
      "Description": "The query you would like to execute on twitter. For details of how write a query and use operators, please go to https://developer.twitter.com/en/docs/tweets/search/guides/standard-operators",
      "MaxLength": 500,
      "MinLength": 3,
      "Type": "String",
    },
    "YouTubeSearchIngestionFreq": Object {
      "AllowedPattern": "^$|(cron\\\\(\\\\s*($|#|\\\\w+\\\\s*=|(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?(?:,(?:[0-6]?\\\\d)(?:(?:-|\\\\/|\\\\,)(?:[0-6]?\\\\d))?)*)\\\\s+(\\\\?|\\\\*|(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?(?:,(?:[01]?\\\\d|2[0-3])(?:(?:-|\\\\/|\\\\,)(?:[01]?\\\\d|2[0-3]))?)*)\\\\s+(\\\\?|\\\\*|(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\\\d|3[01])(?:(?:-|\\\\/|\\\\,)(?:0?[1-9]|[12]\\\\d|3[01]))?)*)\\\\s+(\\\\?|\\\\*|(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\\\/|\\\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\\\?|\\\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\\\s+(\\\\?|\\\\*|(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\\\/|\\\\,|#)(?:[0-6]))?(?:L)?)*|\\\\?|\\\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\\\s)+(\\\\?|\\\\*|(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?(?:,(?:|\\\\d{4})(?:(?:-|\\\\/|\\\\,)(?:|\\\\d{4}))?)*))\\\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the formation 'cron(0 12 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0 12 * * ? *)",
      "Description": "Required: The frequency at which at which YouTube comments should be retrieved",
      "Type": "String",
    },
    "YoutubeAPIKey": Object {
      "AllowedPattern": "^(?!\\\\s*$).+",
      "ConstraintDescription": "Please provide the SSM Key for Youtube API",
      "Default": "/discovering-hot-topics-using-machine-learning/youtube/comments",
      "Description": "The key name where Youtube API credentails are stored",
      "Type": "String",
    },
    "YoutubeSearchQuery": Object {
      "ConstraintDescription": "Please provide key words for Youtube search query",
      "Default": "movie trailers",
      "Description": "Please provide the keywords to search for on Youtube. You can use NOT (-) and OR (|) operators to find videos. Example 'boating|sailing -fishing'. For details refer API documentation on this link https://developers.google.com/youtube/v3/docs/search/list",
      "MaxLength": 500,
      "MinLength": 0,
      "Type": "String",
    },
  },
  "Resources": Object {
    "AccessLogD598EBE9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "IngestionBus3E30EA7C": Object {
      "Properties": Object {
        "Name": "IngestionBus83B8D656",
      },
      "Type": "AWS::Events::EventBus",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644": Object {
      "Properties": Object {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": Object {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": Object {
          "StreamMode": "PROVISIONED",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamGetRecordsIteratorAgeAlarmE6C16601": Object {
      "Properties": Object {
        "AlarmDescription": "Consumer Record Processing Falling Behind, there is risk for data loss due to record expiration.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 2592000,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamReadProvisionedThroughputExceededAlarm821B53BC": Object {
      "Properties": Object {
        "AlarmDescription": "Consumer Application is Reading at a Slower Rate Than Expected.",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2": Object {
      "DependsOn": Array [
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507S3Bucket2BBF90FB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507S3VersionKeyE1813202",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters574b5d9a5410dd5ba913ef31e62eb72c7e50e6f91d123238eace4c0e75f5f507S3VersionKeyE1813202",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "ReservedConcurrentExecutions": 1,
        "Role": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionKinesisEventSourceIngestionFeedConsumerIngestionStreamKinesisStreamD87284BD48D72474": Object {
      "Properties": Object {
        "BatchSize": 5,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": Object {
          "OnFailure": Object {
            "Destination": Object {
              "Fn::GetAtt": Array [
                "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2",
        },
        "MaximumRecordAgeInSeconds": 86400,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D": Object {
      "DependsOn": Array [
        "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43",
        "IngestionFeedConsumerSqsDlqQueue3A707A4B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "Roles": Array [
          Object {
            "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueuePolicy74C5C73B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "IngestionFeedConsumerSqsDlqQueue3A707A4B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            Object {
              "Action": "SQS:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "IngestionFeedConsumerSqsDlqQueue3A707A4B",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "IngestionNewsCatcherNestedStackNewsCatcherNestedStackResourceD666324A": Object {
      "Condition": "IngestionDeployRSSFeeds0E648DA1",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "nestedStackFileName": "IngestionNewsCatcher50494FBF.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "Config": Object {
            "Ref": "Config",
          },
          "EventBus": Object {
            "Fn::GetAtt": Array [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "IngestFrequency": Object {
            "Ref": "RSSNewsFeedIngestFrequency",
          },
          "NewsSearchQuery": Object {
            "Ref": "NewsSearchQuery",
          },
          "StreamARN": Object {
            "Fn::GetAtt": Array [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "referencetoAssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3Bucket18A0F98CRef": Object {
            "Ref": "AssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3Bucket18A0F98C",
          },
          "referencetoAssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3VersionKeyDC007E39Ref": Object {
            "Ref": "AssetParameters65d9574a42198b64679ff290cf8ffd5eab18b5fcef4ca4d470f6525d17218622S3VersionKeyDC007E39",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eS3Bucket74A4FFE6",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eS3VersionKeyF03F0C67",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersc4f231e32ffabf1461bd4b16fe4d9259ccb8a54046d0d9557d137f01b60d481eS3VersionKeyF03F0C67",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionRedditIngestionNestedStackRedditIngestionNestedStackResource5ABCB860": Object {
      "Condition": "IngestionDeployRedditIngestionB0819499",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "nestedStackFileName": "IngestionRedditIngestion6FBA36BE.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "EventBus": Object {
            "Fn::GetAtt": Array [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "StreamARN": Object {
            "Fn::GetAtt": Array [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "referencetoAssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3BucketFA3528CFRef": Object {
            "Ref": "AssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3BucketFA3528CF",
          },
          "referencetoAssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3VersionKey96E6DE1BRef": Object {
            "Ref": "AssetParameters83cd4b97c10dca9845de66263eedd16681e8d5214410c04d145f2def82895bf2S3VersionKey96E6DE1B",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232S3Bucket0417DA8C",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232S3VersionKey5AA31B7B",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters623ed35d53fa017ae85ef92cd681b8fc0494b5ff4364d156c24aec50a6383232S3VersionKey5AA31B7B",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8": Object {
      "Condition": "IngestionDeployCustomIngestion93AB274A",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "nestedStackFileName": "IngestionS3CustomIngestionDA5FFAE5.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "IntegrationBus": Object {
            "Fn::GetAtt": Array [
              "TestBusF2C65FE8",
              "Arn",
            ],
          },
          "MetadataNS": "metadata.call_analytics",
          "S3AccessLoggingBucket": Object {
            "Fn::GetAtt": Array [
              "AccessLogD598EBE9",
              "Arn",
            ],
          },
          "StreamARN": Object {
            "Fn::GetAtt": Array [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "referencetoAssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3Bucket9C4B93E6Ref": Object {
            "Ref": "AssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3Bucket9C4B93E6",
          },
          "referencetoAssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3VersionKeyAE1109A5Ref": Object {
            "Ref": "AssetParameters12a365b778798bfc04a6082750e9436c20305bfe0835245e731bb3c2a03582f3S3VersionKeyAE1109A5",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feS3Bucket2CB045E2",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feS3VersionKey99FBCD4E",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters24b9c306b9cc9d1fc4a6794806da9bf7b0c4e4ff2b31ee80a50b9ed1f7a204feS3VersionKey99FBCD4E",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionTwitterSearchNestedStackTwitterSearchNestedStackResource3B8C7F8F": Object {
      "Condition": "IngestionDeployTwitterIngestion4D7DE3EB",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "nestedStackFileName": "IngestionTwitterSearch21AEAF91.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "IngestQueryFrequency": Object {
            "Ref": "TwitterIngestQueryFrequency",
          },
          "QueryParameter": Object {
            "Ref": "TwitterSearchQuery",
          },
          "SSMPathForCredentials": Object {
            "Ref": "TwitterSSMPathForBearerToken",
          },
          "StreamARN": Object {
            "Fn::GetAtt": Array [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "SupportedLang": Object {
            "Ref": "SupportedLanguages",
          },
          "referencetoAssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3BucketEC06255ARef": Object {
            "Ref": "AssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3BucketEC06255A",
          },
          "referencetoAssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3VersionKey9B645B6ARef": Object {
            "Ref": "AssetParametersbac4548d66295d0afd8c4a6ab48b825793fb3b080a587e52c65d66c0892896bdS3VersionKey9B645B6A",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fS3Bucket6CF1699E",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fS3VersionKey4E46E454",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters082a883ebe1abcef2f93d4bf1488c4a4393926e896b31151580817ec8a93958fS3VersionKey4E46E454",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionYouTubeCommentsIngestionNestedStackYouTubeCommentsIngestionNestedStackResourceD9D9E2B1": Object {
      "Condition": "IngestionDeployYouTubeCommentsA44A0A50",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "nestedStackFileName": "IngestionYouTubeCommentsIngestion1376988D.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "EventBus": Object {
            "Fn::GetAtt": Array [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "StreamARN": Object {
            "Fn::GetAtt": Array [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "YouTubeSearchIngestionFreq": Object {
            "Ref": "YouTubeSearchIngestionFreq",
          },
          "YoutubeAPIKey": Object {
            "Ref": "YoutubeAPIKey",
          },
          "YoutubeSearchQuery": Object {
            "Ref": "YoutubeSearchQuery",
          },
          "referencetoAssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3Bucket4A8BF259Ref": Object {
            "Ref": "AssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3Bucket4A8BF259",
          },
          "referencetoAssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3VersionKeyF30FD9ABRef": Object {
            "Ref": "AssetParametersdfeb1ba00762c50e03e0442ee6b634d7d2b75158538838b00cb194b8885e325eS3VersionKeyF30FD9AB",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fS3Bucket3459BAE7",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fS3VersionKey688FF437",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersbf694fd6dae67b8e1b2054e95b26a53a7a73ec429539f45457a63cd8081a279fS3VersionKey688FF437",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "TestBusF2C65FE8": Object {
      "Properties": Object {
        "Name": "TestBus",
      },
      "Type": "AWS::Events::EventBus",
    },
  },
}
`;
