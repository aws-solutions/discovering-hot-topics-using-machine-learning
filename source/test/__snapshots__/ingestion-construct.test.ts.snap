// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Bus creation 1`] = `
{
  "Conditions": {
    "IngestionDeployCustomIngestion93AB274A": {
      "Fn::Equals": [
        {
          "Ref": "DeployCustomIngestion",
        },
        "Yes",
      ],
    },
    "IngestionDeployRSSFeeds0E648DA1": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployRSSFeeds",
            },
            "Yes",
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "RSSNewsFeedIngestFrequency",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployRedditIngestionB0819499": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployRedditIngestion",
            },
            "Yes",
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "RedditAPIKey",
                },
                "",
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "RedditIngestionFrequency",
                },
                "",
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "SubRedditsToFollow",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployTwitterIngestion4D7DE3EB": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployTwitter",
            },
            "Yes",
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TwitterSearchQuery",
                },
                "",
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TwitterIngestQueryFrequency",
                },
                "",
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TwitterSSMPathForBearerToken",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "IngestionDeployYouTubeCommentsA44A0A50": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployYouTubeCommentsIngestion",
            },
            "Yes",
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "YouTubeSearchIngestionFreq",
                },
                "",
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::And": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "YoutubeSearchQuery",
                    },
                    "",
                  ],
                },
                {
                  "Fn::Equals": [
                    "",
                  ],
                },
              ],
            },
          ],
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "YoutubeAPIKey",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
  },
  "Outputs": {
    "IngestionS3BucketToUploadData5A8509A2": {
      "Condition": "IngestionDeployCustomIngestion93AB274A",
      "Description": "Bucket location to upload source files for ingestion",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://s3.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Fn::GetAtt": [
                "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8",
                "Outputs.IngestionS3CustomIngestionS3Bucket83268CB3Ref",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "AssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bArtifactHash53778CAB": {
      "Description": "Artifact hash for asset "0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3b"",
      "Type": "String",
    },
    "AssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3Bucket3E9B60B5": {
      "Description": "S3 bucket for asset "0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3b"",
      "Type": "String",
    },
    "AssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3VersionKey675907BE": {
      "Description": "S3 key for asset version "0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3b"",
      "Type": "String",
    },
    "AssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7ArtifactHashD52197FF": {
      "Description": "Artifact hash for asset "1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7"",
      "Type": "String",
    },
    "AssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3Bucket9E565654": {
      "Description": "S3 bucket for asset "1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7"",
      "Type": "String",
    },
    "AssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3VersionKey57F7B07B": {
      "Description": "S3 key for asset version "1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7"",
      "Type": "String",
    },
    "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dArtifactHashD3F143B8": {
      "Description": "Artifact hash for asset "2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2d"",
      "Type": "String",
    },
    "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dS3Bucket03C0FA71": {
      "Description": "S3 bucket for asset "2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2d"",
      "Type": "String",
    },
    "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dS3VersionKey86E7DEAD": {
      "Description": "S3 key for asset version "2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2d"",
      "Type": "String",
    },
    "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6ArtifactHash1AC60176": {
      "Description": "Artifact hash for asset "34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6"",
      "Type": "String",
    },
    "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6S3BucketB74BE12E": {
      "Description": "S3 bucket for asset "34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6"",
      "Type": "String",
    },
    "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6S3VersionKey4496FDB2": {
      "Description": "S3 key for asset version "34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6"",
      "Type": "String",
    },
    "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643ArtifactHashBA0D8412": {
      "Description": "Artifact hash for asset "4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643"",
      "Type": "String",
    },
    "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643S3Bucket89057F20": {
      "Description": "S3 bucket for asset "4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643"",
      "Type": "String",
    },
    "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643S3VersionKey58106085": {
      "Description": "S3 key for asset version "4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643"",
      "Type": "String",
    },
    "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efArtifactHashE7CF54DD": {
      "Description": "Artifact hash for asset "b26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7ef"",
      "Type": "String",
    },
    "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efS3BucketFD71B376": {
      "Description": "S3 bucket for asset "b26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7ef"",
      "Type": "String",
    },
    "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efS3VersionKey675CAC40": {
      "Description": "S3 key for asset version "b26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7ef"",
      "Type": "String",
    },
    "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3ArtifactHash5B2C2138": {
      "Description": "Artifact hash for asset "d4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3"",
      "Type": "String",
    },
    "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3S3Bucket4D780BB7": {
      "Description": "S3 bucket for asset "d4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3"",
      "Type": "String",
    },
    "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3S3VersionKey75FC1AE0": {
      "Description": "S3 key for asset version "d4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3"",
      "Type": "String",
    },
    "AssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653ArtifactHash3A7282CC": {
      "Description": "Artifact hash for asset "d7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653"",
      "Type": "String",
    },
    "AssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3Bucket5BDCD771": {
      "Description": "S3 bucket for asset "d7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653"",
      "Type": "String",
    },
    "AssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3VersionKey812C6984": {
      "Description": "S3 key for asset version "d7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653"",
      "Type": "String",
    },
    "AssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eArtifactHash7954C83A": {
      "Description": "Artifact hash for asset "e2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681e"",
      "Type": "String",
    },
    "AssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3Bucket4433505A": {
      "Description": "S3 bucket for asset "e2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681e"",
      "Type": "String",
    },
    "AssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3VersionKey82E6EE75": {
      "Description": "S3 key for asset version "e2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681e"",
      "Type": "String",
    },
    "AssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174ArtifactHash17905783": {
      "Description": "Artifact hash for asset "ea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174"",
      "Type": "String",
    },
    "AssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3Bucket52FCDB8B": {
      "Description": "S3 bucket for asset "ea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174"",
      "Type": "String",
    },
    "AssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3VersionKey131506C4": {
      "Description": "S3 key for asset version "ea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174"",
      "Type": "String",
    },
    "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cArtifactHash9DA8454C": {
      "Description": "Artifact hash for asset "ec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0c"",
      "Type": "String",
    },
    "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cS3BucketCE1F249F": {
      "Description": "S3 bucket for asset "ec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0c"",
      "Type": "String",
    },
    "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cS3VersionKeyFFC8C393": {
      "Description": "S3 key for asset version "ec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0c"",
      "Type": "String",
    },
    "Config": {
      "Default": "{"country":"ALL", "language":"ALL", "topic":"ALL"}",
      "Description": "Provide configuration for RSS feeds. This parameter should be configured as a JSON string. Here is a sample configuration {"country":"ALL", "language":"ALL", "topic":"ALL"}. For Country and language use ISO code. The list of superset of all supported topics is: "tech", "news", "business", "science", "finance", "food", "politics", "economics", "travel", "entertainment", "music", "sport", "world".Note: not all topics are supported for each RSS provider. Setting the value as "ALL", is treated as a wild character search",
      "Type": "String",
    },
    "DeployCustomIngestion": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Required: Would you like to deploy custom data ingestion from an S3 bucket.",
      "Type": "String",
    },
    "DeployRSSFeeds": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy Twitter Ingestion mechanism",
      "Type": "String",
    },
    "DeployRedditIngestion": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Required: Would you like to deploy the news feed ingestion mechanism. If you answer yes, Config and RSSNewsFeedIngestFrequency parameters are mandatory",
      "Type": "String",
    },
    "DeployTwitter": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy Twitter Ingestion mechanism",
      "Type": "String",
    },
    "DeployYouTubeCommentsIngestion": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Would you like to deploy YouTube comments ingestion mechanism. If you answer yes, YouTubeVideoSearchQuery and YouTubeSearchIngestionFreq parameters are mandatory",
      "Type": "String",
    },
    "NewsSearchQuery": {
      "ConstraintDescription": "Please enter the keyword to use to filter RSS news feed",
      "Description": "Provide comma separated list of keywords (optional) to filter news feeds. Only feeds containing atleast one of the keywords from the list will be processed. If no keyword is provided, feeds will not be filtered and all RSS feeds will be processed",
      "Type": "String",
    },
    "NumberOfTopics": {
      "ConstraintDescription": "Please verify if the value entered for number of topics to be discovered is between 1 and 100 (both inclusive).",
      "Default": "10",
      "Description": "The number of topics to be discovered by Topic analysis. The min value is 1 and maximum value is 100",
      "MaxValue": 100,
      "MinValue": 1,
      "Type": "Number",
    },
    "RSSNewsFeedIngestFrequency": {
      "AllowedPattern": "(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(0/5 * * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0 23 * * ? *)",
      "Description": "The frequency at which RSS Feeds should be pulled. For detailed documentation on schedule expression rules, please refer https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Type": "String",
    },
    "RedditAPIKey": {
      "AllowedPattern": "^$|^(?!\\s*$).+",
      "ConstraintDescription": "Please provide the SSM key for Reddit API",
      "Default": "/discovering-hot-topics-using-machine-learning/reddit/comments",
      "Description": "Required: The SSM parameter key name where the Reddit API credentials detailare stored. For details about how and where to store the API credentials, please refer the implementation guide for this solution",
      "Type": "String",
    },
    "RedditIngestionFrequency": {
      "AllowedPattern": "^$|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "Default": "cron(0/60 * * * ? *)",
      "Description": "Required: The Polling frequency at which the system should ingest comments from subreddits",
      "Type": "String",
    },
    "SubRedditsToFollow": {
      "AllowedPattern": "^$|[^,(?! )]+",
      "ConstraintDescription": "",
      "Default": "r/aws,r/MachineLearning",
      "Description": "Optional: Please provide the list of SubReddits to follow as comma separated list. Alternatively you can also set the list in the DynamoDB table. For details on the DynamoDB configuration, please refer our implementation guide",
      "Type": "String",
    },
    "SupportedLanguages": {
      "AllowedPattern": "^$|([a-z]{2}-[a-z]{2}|[a-z]{2})(,([a-z]{2}-[a-z]{2}|[a-z]{2}))*",
      "ConstraintDescription": "Provide a list of comma separated language iso-code values, Example: de,en,es,it,pt,fr,ja,ko,zh-cn (no spaces after the comma). The input did not match the validation pattern.",
      "Default": "en,es",
      "Description": "The list of languages to query the Search API with. The super set of languages supported is driven by Amazon Translate. For the latest list of languages, please refer to the Comprehend documentation at this location https://docs.aws.amazon.com/translate/latest/dg/what-is.html#language-pairs",
      "MaxLength": 43,
      "MinLength": 2,
      "Type": "String",
    },
    "TopicAnalysisFrequency": {
      "AllowedPattern": "(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(10 0 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(10 0 * * ? *)",
      "Description": "The frequency at which the topic analysis job should run. The minimum is an hour. It is recommened That the job be run a few mins after the hour e.g 10 mins after the hour",
      "Type": "String",
    },
    "TwitterIngestQueryFrequency": {
      "AllowedPattern": "(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(0/5 * * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0/5 * * * ? *)",
      "Description": "The frequency at which API calls will be made to twitter in a cron expression format. For detailed documentation on schedule expression rules, please refer https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Type": "String",
    },
    "TwitterSSMPathForBearerToken": {
      "AllowedPattern": "^(?!\\s*$).+",
      "ConstraintDescription": "The SSM parameter store path cannot be empty",
      "Default": "/discovering-hot-topics-using-machine-learning/discovering-hot-topics-using-machine-learning/twitter",
      "Description": "The SSM parameter store path of key where the credentials are stored as encrypted string",
      "Type": "String",
    },
    "TwitterSearchQuery": {
      "Default": "entertainment",
      "Description": "The query you would like to execute on twitter. For details of how write a query and use operators, please go to https://developer.twitter.com/en/docs/tweets/search/guides/standard-operators",
      "MaxLength": 500,
      "MinLength": 3,
      "Type": "String",
    },
    "YouTubeSearchIngestionFreq": {
      "AllowedPattern": "^$|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the formation 'cron(0 12 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Default": "cron(0 12 * * ? *)",
      "Description": "Required: The frequency at which at which YouTube comments should be retrieved",
      "Type": "String",
    },
    "YoutubeAPIKey": {
      "AllowedPattern": "^(?!\\s*$).+",
      "ConstraintDescription": "Please provide the SSM Key for Youtube API",
      "Default": "/discovering-hot-topics-using-machine-learning/youtube/comments",
      "Description": "The key name where Youtube API credentails are stored",
      "Type": "String",
    },
    "YoutubeSearchQuery": {
      "ConstraintDescription": "Please provide key words for Youtube search query",
      "Default": "movie trailers",
      "Description": "Please provide the keywords to search for on Youtube. You can use NOT (-) and OR (|) operators to find videos. Example 'boating|sailing -fishing'. For details refer API documentation on this link https://developers.google.com/youtube/v3/docs/search/list",
      "MaxLength": 500,
      "MinLength": 0,
      "Type": "String",
    },
  },
  "Resources": {
    "AccessLogD598EBE9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "IngestionBus3E30EA7C": {
      "Properties": {
        "Name": "IngestionBus83B8D656",
      },
      "Type": "AWS::Events::EventBus",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644": {
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": {
          "StreamMode": "PROVISIONED",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamGetRecordsIteratorAgeAlarmE6C16601": {
      "Properties": {
        "AlarmDescription": "Consumer Record Processing Falling Behind, there is risk for data loss due to record expiration.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 43200,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamReadProvisionedThroughputExceededAlarm821B53BC": {
      "Properties": {
        "AlarmDescription": "Consumer Application is Reading at a Slower Rate Than Expected.",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2": {
      "DependsOn": [
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6S3BucketB74BE12E",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6S3VersionKey4496FDB2",
                        },
                      ],
                    },
                  ],
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters34c4f3ed8baec68239410351b15e78f23c0fd0b241b858732ff335175df6ecb6S3VersionKey4496FDB2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionKinesisEventSourceIngestionFeedConsumerIngestionStreamKinesisStreamD87284BD48D72474": {
      "Properties": {
        "BatchSize": 5,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2",
        },
        "MaximumRecordAgeInSeconds": 86400,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D": {
      "DependsOn": [
        "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43",
        "IngestionFeedConsumerSqsDlqQueue3A707A4B",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "Roles": [
          {
            "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueuePolicy74C5C73B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "IngestionFeedConsumerSqsDlqQueue3A707A4B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
              "Sid": "QueueOwnerOnlyAccess",
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn",
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "IngestionFeedConsumerSqsDlqQueue3A707A4B",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "IngestionNewsCatcherNestedStackNewsCatcherNestedStackResourceD666324A": {
      "Condition": "IngestionDeployRSSFeeds0E648DA1",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "nestedStackFileName": "IngestionNewsCatcher50494FBF.nested.template",
      },
      "Properties": {
        "Parameters": {
          "Config": {
            "Ref": "Config",
          },
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "IngestFrequency": {
            "Ref": "RSSNewsFeedIngestFrequency",
          },
          "NewsSearchQuery": {
            "Ref": "NewsSearchQuery",
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "referencetoAssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3Bucket3E9B60B5Ref": {
            "Ref": "AssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3Bucket3E9B60B5",
          },
          "referencetoAssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3VersionKey675907BERef": {
            "Ref": "AssetParameters0e1ed5e9877589f46e377d731e6842258e3ea211baabfdd274c70cd1cee92c3bS3VersionKey675907BE",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cS3BucketCE1F249F",
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cS3VersionKeyFFC8C393",
                      },
                    ],
                  },
                ],
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersec0fbf3c80c7fcfcb8974564d5f13af95a4b37e20778802e9c2f30f63cff4f0cS3VersionKeyFFC8C393",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionRedditIngestionNestedStackRedditIngestionNestedStackResource5ABCB860": {
      "Condition": "IngestionDeployRedditIngestionB0819499",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "nestedStackFileName": "IngestionRedditIngestion6FBA36BE.nested.template",
      },
      "Properties": {
        "Parameters": {
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "SubRedditsToFollow": {
            "Ref": "SubRedditsToFollow",
          },
          "referencetoAssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3Bucket5BDCD771Ref": {
            "Ref": "AssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3Bucket5BDCD771",
          },
          "referencetoAssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3VersionKey812C6984Ref": {
            "Ref": "AssetParametersd7320932ef08105c7e26f649e91d513e5d01e28d09c2058814f5433ca200b653S3VersionKey812C6984",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643S3Bucket89057F20",
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643S3VersionKey58106085",
                      },
                    ],
                  },
                ],
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters4331059565b51a5e0b6fd052d0bd84b4018b2792e80b1c527c2474f076166643S3VersionKey58106085",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8": {
      "Condition": "IngestionDeployCustomIngestion93AB274A",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "nestedStackFileName": "IngestionS3CustomIngestionDA5FFAE5.nested.template",
      },
      "Properties": {
        "Parameters": {
          "IntegrationBus": {
            "Fn::GetAtt": [
              "TestBusF2C65FE8",
              "Arn",
            ],
          },
          "MetadataNS": "metadata.call_analytics",
          "S3AccessLoggingBucket": {
            "Fn::GetAtt": [
              "AccessLogD598EBE9",
              "Arn",
            ],
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "referencetoAssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3Bucket9E565654Ref": {
            "Ref": "AssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3Bucket9E565654",
          },
          "referencetoAssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3VersionKey57F7B07BRef": {
            "Ref": "AssetParameters1abc0fc8c8d9ecaa933fa5a28b2250fd168e9adc879df30b7edc099776a4a4b7S3VersionKey57F7B07B",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efS3BucketFD71B376",
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efS3VersionKey675CAC40",
                      },
                    ],
                  },
                ],
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersb26fffda5206e56b57362fc75c2f84d9496c145cc6e7403d7c8c96474e65b7efS3VersionKey675CAC40",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionTwitterSearchNestedStackTwitterSearchNestedStackResource3B8C7F8F": {
      "Condition": "IngestionDeployTwitterIngestion4D7DE3EB",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "nestedStackFileName": "IngestionTwitterSearch21AEAF91.nested.template",
      },
      "Properties": {
        "Parameters": {
          "IngestQueryFrequency": {
            "Ref": "TwitterIngestQueryFrequency",
          },
          "QueryParameter": {
            "Ref": "TwitterSearchQuery",
          },
          "SSMPathForCredentials": {
            "Ref": "TwitterSSMPathForBearerToken",
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "SupportedLang": {
            "Ref": "SupportedLanguages",
          },
          "referencetoAssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3Bucket52FCDB8BRef": {
            "Ref": "AssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3Bucket52FCDB8B",
          },
          "referencetoAssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3VersionKey131506C4Ref": {
            "Ref": "AssetParametersea3ad9472721d25378ce14217829f6bde3a370e071a7e7235112ebfc1eaf6174S3VersionKey131506C4",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dS3Bucket03C0FA71",
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dS3VersionKey86E7DEAD",
                      },
                    ],
                  },
                ],
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters2870714034dbe1ad2020a27dd62cac476d70c50003588febab7c1960f1dbdd2dS3VersionKey86E7DEAD",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "IngestionYouTubeCommentsIngestionNestedStackYouTubeCommentsIngestionNestedStackResourceD9D9E2B1": {
      "Condition": "IngestionDeployYouTubeCommentsA44A0A50",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "nestedStackFileName": "IngestionYouTubeCommentsIngestion1376988D.nested.template",
      },
      "Properties": {
        "Parameters": {
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn",
            ],
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn",
            ],
          },
          "YouTubeSearchIngestionFreq": {
            "Ref": "YouTubeSearchIngestionFreq",
          },
          "YoutubeAPIKey": {
            "Ref": "YoutubeAPIKey",
          },
          "YoutubeSearchQuery": {
            "Ref": "YoutubeSearchQuery",
          },
          "referencetoAssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3Bucket4433505ARef": {
            "Ref": "AssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3Bucket4433505A",
          },
          "referencetoAssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3VersionKey82E6EE75Ref": {
            "Ref": "AssetParameterse2902794f77117d9d61ec3d5bb1e5a5d4666fbda3f4f86b6bc64c096947b681eS3VersionKey82E6EE75",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3S3Bucket4D780BB7",
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3S3VersionKey75FC1AE0",
                      },
                    ],
                  },
                ],
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersd4768d2fd18b5a622d0c4bffa487189ba6e07f414eda257d6dc6856fbc3b4ac3S3VersionKey75FC1AE0",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "TestBusF2C65FE8": {
      "Properties": {
        "Name": "TestBus",
      },
      "Type": "AWS::Events::EventBus",
    },
  },
}
`;
